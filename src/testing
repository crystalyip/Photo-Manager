package sample;

import java.util.ArrayList;
import Tagger.*;
import java.io.*;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.control.Button;
import java.io.File;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.TreeItem;
import javafx.scene.control.TreeView;
import javafx.scene.layout.BorderPane;
import javafx.stage.DirectoryChooser;
import javafx.stage.Stage;
import javafx.

public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception{
        User user = new User();
        FileManager m = new FileManager();
        user.addObserver(m);
        GridPane rootNode = new GridPane();
        Button button = new Button("Enter");
        Button button2 = new Button("Enter");
        Button getLog = new Button("Get Log");
        rootNode.add(button, 1,0);
        rootNode.add(button2,1,1);
        rootNode.add(getLog,1, 3);
        TextField targetDirectory = new TextField();
        TextField selectFile = new TextField();
        rootNode.add(targetDirectory, 0 ,1);
        rootNode.add(selectFile, 0, 0);
        button.setOnAction(e -> {
            String fileName = selectFile.getText();
            File file = new File(fileName);
            if (file != null) {
                user.viewFile(file);
            }

        });

        button2.setOnAction(e ->{
            String target = targetDirectory.getText();
            System.out.println(target);
            if (target != null){
                user.moveFile(target);
            }



        });

        getLog.setOnAction(e ->{
            ArrayList<String> arraylist= new ArrayList<String>();
            try
            {
                FileInputStream fis = new FileInputStream("/Users/crystalyip/Desktop/testing2/serializing/filemanager.ser");
                ObjectInputStream ois = new ObjectInputStream(fis);
                arraylist = (ArrayList) ois.readObject();
                ois.close();
                fis.close();
            }catch(IOException ioe){
                //ioe.printStackTrace();
                System.out.println("User has not made any changes yet.");
                return;
            }catch(ClassNotFoundException c){
                System.out.println("Class not found");
                c.printStackTrace();
                return;
            }
            for (Object x: arraylist){
                String[] temp = (String[])x;
                System.out.println("Original: " + temp[0] + ", " + "Change: " + temp[1] + "-- " + temp[2]);
            }
        });


        b.setTop(c);
        b.setCenter(a);

        primaryStage.setScene(new Scene(rootNode, 300, 275));

        primaryStage.show();
    }


    public static void main(String[] args) {
        launch(args);
    }

}

